<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">
	<!-- Member 세령 -->
	<resultMap type="com.kh.ti.member.model.vo.Member" id="memberResultSet">
		<id property="memberId" column="MEMBER_ID"/>
		<result property="email" column="EMAIL"/>
		<result property="password" column="PASSWORD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="birthday" column="BIRTHDAY"/>
		<result property="gender" column="GENDER"/>
		<result property="accCode" column="ACC_CODE"/>
		<result property="accNumber" column="ACC_NUMBER"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="secessionDate" column="SECESSION_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="enrollStatus" column="ENROLL_STATUS"/>
		<result property="phone" column="PHONE"/>
		<result property="userPoint" column="USER_POINT"/>
		<result property="userProceeds" column="USER_PROCEEDS"/>
		<result property="enrollType" column="ENROLL_TYPE"/>
		<result property="penalty" column="PENALTY"/>
		<result property="memberType" column="MEMBER_TYPE"/>
	</resultMap>
	
	<!-- 비밀번호 확인용 메소드 세령 -->
	<select id="selectPwd" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT PASSWORD
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND ENROLL_STATUS = 'Y'
	</select>
	
	<!-- 로그인용(임시) 세령 -->
	<select id="selectLoginUser" resultMap="memberResultSet" parameterType="Member">
		SELECT * 
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND ENROLL_STATUS = 'Y'
	</select>
	
	<!-- 회원가입용 세령 -->
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER VALUES
		(MEMBER_SEQ.NEXTVAL, #{email}, #{password}, #{userName},
		<choose>
			<when test="birthday != null and birthday != ''">#{birthday}</when>
			<otherwise>''</otherwise>
		</choose>,
		<choose>
			<when test="gender != null and gender != ''">#{gender}</when>
			<otherwise>''</otherwise>
		</choose>,
		NULL, NULL, SYSDATE, NULL, NULL, 'Y', 
		<choose>
			<when test="phone != null and phone != ''">#{phone}</when>
			<otherwise>'000-0000-0000'</otherwise>
		</choose>, 
		3000, 0, #{enrollType}, 0, 'M')
	</insert>
	
	<!-- 가입포인트 적립용 세령 -->
	<insert id="insertReservePoint" parameterType="java.lang.String">
		INSERT INTO RESERVE_POINT VALUES 
		(RESERVE_POINT_SEQ.NEXTVAL, 3000, SYSDATE, 
		(SELECT MEMBER_ID FROM MEMBER WHERE EMAIL = #{email}), 
		0, NULL, NULL, NULL)
	</insert>
	
	<!-- 비밀번호 수정용 세령 -->
	<update id="updatePwd" parameterType="Member">
		UPDATE MEMBER
		SET PASSWORD = #{ password }
		WHERE EMAIL = #{ email }
		AND ENROLL_STATUS = 'Y'
	</update>
	
	<!-- 회원 탈퇴용 세령 -->
	<update id="updateEnrollStatus" parameterType="Member">
		UPDATE MEMBER 
		SET ENROLL_STATUS = 'N'
		WHERE EMAIL = #{ email }
		AND ENROLL_STATUS = 'Y'
	</update>
	
	<!-- 회원정보수정용 세령 -->
	<update id="updateUserInfo" parameterType="Member">
		UPDATE MEMBER
		SET USER_NAME = #{ userName },
		    EMAIL = #{ email },
		    GENDER = #{ gender },
		    BIRTHDAY = #{ birthday }
		WHERE MEMBER_ID = #{ memberId }
		AND ENROLL_STATUS = 'Y'
	</update>
	
	<!-- 계좌정보수정용 세령 -->
	<update id="updateAcc" parameterType="Member">
		UPDATE MEMBER
		SET ACC_CODE = #{ accCode },
		    ACC_NUMBER = #{ accNumber }
		WHERE MEMBER_ID = #{ memberId }
		AND ENROLL_STATUS = 'Y'
	</update>
	
	<!-- 회원수 조회용 세령 -->
	<select id="selectListCount" resultType="_int" parameterType="String">
		SELECT COUNT(*) FROM MEMBER
		WHERE 1 = 1
		<if test="_parameter != null and !_parameter.equals('ALL')">
			AND ENROLL_STATUS = #{ _parameter }
		</if>
	</select>
	
	<!-- 회원정보조회용 세령 -->
	<select id="selectAllMemberList" resultMap="memberResultSet" parameterType="String">
		SELECT * FROM MEMBER
		WHERE MEMBER_TYPE = 'M'
		<if test="_parameter != null and !_parameter.equals('ALL')">
			AND ENROLL_STATUS = #{ _parameter }
		</if>
		ORDER BY MEMBER_ID DESC
	</select>
	
	<!-- 회원정보 조건 조회용 세령 -->
	<select id="selectConditionList" parameterType="map" resultMap="memberResultSet">
		SELECT * FROM MEMBER
		WHERE 
		<choose>
			<when test="condition != null and condition.equals('name')">
				USER_NAME = #{ conditionValue }
			</when>
			<when test="condition != null and condition.equals('phone')">
				PHONE = #{ conditionValue }
			</when>
			<when test="condition != null and condition.equals('email')">
				EMAiL = #{ conditionValue }
			</when>
		</choose>
	</select>
	
	<!-- 이메일로 비밀번호 수정용 세령 -->
	<update id="updatePasswordFromFind" parameterType="Member">
		UPDATE MEMBER
		SET PASSWORD = #{ password }
		WHERE EMAIL = #{ email }
	</update>
	
	<!-- 이메일로 회원 조회용 세ㅕㄹㅇ -->
	<select id="selectMemberEmail" parameterType="String" resultMap="memberResultSet">
		SELECT * FROM MEMBER
		WHERE EMAIL = #{ email }
	</select>
	
	<!-- MEMBER 시퀀스 얻기 세령 -->
	<select id="currentMemberSeq" resultType="_int" parameterType="Member">
		SELECT MEMBER_ID FROM MEMBER
		WHERE EMAIL = #{ email }
		AND ENROLL_STATUS = 'Y'
	</select>
</mapper>