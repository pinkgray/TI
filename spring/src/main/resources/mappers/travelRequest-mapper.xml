<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="TravelRequest">
	<!-- 의뢰글 목록 조회 -->
	<resultMap type="TravelRequest" id="requestResultSet">
		<id property="requestId" column="REQUEST_ID"/>
		<result property="requestTitle" column="REQUEST_TITLE"/>
		<result property="userName" column="USER_NAME"/>
		<result property="requestPrice" column="REQUEST_PRICE"/>
		<result property="trvCost" column="TRV_COST"/>
		<result property="endDate" column="END_DATE"/>
	</resultMap>
	
	<!-- 설계글 목록 조회 -->
	<resultMap type="TravelRequestPlan" id="planListResultSet">
		<id property="planId" column="PLAN_ID"/>
		<result property="planTitle" column="PLAN_TITLE"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="planContent" column="PLAN_CONTENT"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
	</resultMap>
	
	<!-- 선택된 설계글 조회 (불러오기1단계(설계글))-->
	<resultMap type="TravelRequestPlan" id="loadPlanResultSet">
		<id property="planId" column="PLAN_ID"/>
		<result property="ptcpId" column="PTCP_ID"/>
		<result property="planTitle" column="PLAN_TITLE"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="planContent" column="PLAN_CONTENT"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="roomCharge" column="ROOM_CHARGE"/>
		<result property="trafficCharge" column="TRAFFIC_CHARGE"/>
		<result property="etcCharge" column="ETC_CHARGE"/>
		<result property="chooseStatus" column="CHOOSE_STATUS"/>
		<collection property="dayList" javaType="java.util.ArrayList"
					resultMap="dayListResultSet"/>
		<collection property="reqList" javaType="java.util.ArrayList"
					resultMap="requestResultSet"/>
	</resultMap>
	
	<!-- 선택된 설계글 조회(불러오기2단계(각 일정)) -->
	<resultMap type="PlanDay" id="dayListResultSet">
		<id property="PdayId" column="PDAY_ID"/>
		<result property="pDay" column="PDAY"/>
		<result property="pDayMemo" column="PDAY_MEMO"/>
		<result property="openStatus" column="OPEN_STATUS"/>
		<result property="planId" column="PLAN_ID"/>
		<collection property="placeList" javaType="java.util.ArrayList"
					resultMap="placeListResultSet"/>
	</resultMap>
	
	<!-- 선택된 설계글 조회(불러오기3단계(각 장소)) -->
	<resultMap type="PlanPlace" id="placeListResultSet">
		<id property="PplaceId" column="PPLACE_ID"/>
		<result property="PplaceTitle" column="PPLACE_TITLE"/>
		<result property="PplaceAddress" column="PPLACE_ADDRESS"/>
		<result property="PplaceLat" column="PPLACE_LAT"/>
		<result property="PplaceLng" column="PPLACE_LNG"/>
		<result property="PdayId" column="PDAY_ID"/>
	</resultMap>
	
	<!-- 의뢰글 상세 보기 -->
	<resultMap type="TravelRequest" id="requestDetailResultSet">
		<!-- <id property="requestId" column="REQUEST_ID"/>
		<result property="requestTitle" column="REQUEST_TITLE"/>
		<result property="requestContent" column="REQUEST_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="userName" column="USER_NAME"/>
		<result property="requestPrice" column="REQUEST_PRICE"/>
		<result property="trvCost" column="TRV_COST"/>
		<result property="endDate" column="END_DATE"/>
		<collection property="planList" javaType="java.util.ArrayList"
					resultMap="planListResultSet"/> -->
		<id property="requestId" column="REQUEST_ID"/>
		<result property="requestTitle" column="REQUEST_TITLE"/>
		<result property="requestContent" column="REQUEST_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="userName" column="USER_NAME"/>
		<result property="requestPrice" column="REQUEST_PRICE"/>
		<result property="trvCost" column="TRV_COST"/>
		<result property="endDate" column="END_DATE"/>
		<collection property="planList" javaType="java.util.ArrayList"
					resultMap="planListResultSet"/>
		<collection property="participationList" column="PTCP_ID"
					javaType="java.util.ArrayList" resultMap="participationList"/>
	</resultMap>
	
	<!-- 참여 목록 조회 -->
	<resultMap type="Participation" id="participationList">
		<id property="ptcpId" column="PTCP_ID"/>
		<result property="chooseStatus" column="CHOOSE_STATUS"/>
		<result property="ptcpDate" column="PTCP_DATE"/>
		<result property="chooseDate" column="CHOOSE_DATE"/>
		<result property="requestId" column="REQUEST_ID"/>
		<result property="planId" column="PLAN_ID"/>
	</resultMap>
	
	<!-- 나의 의뢰 목록 -->
	<resultMap type="TravelRequest" id="myRequestResultSet">
		<id property="requestId" column="REQUEST_ID"/>
		<result property="requestTitle" column="REQUEST_TITLE"/>
		<result property="userName" column="USER_NAME"/>
		<result property="requestPrice" column="REQUEST_PRICE"/>
		<result property="trvCost" column="TRV_COST"/>
		<result property="endDate" column="END_DATE"/>
		<result property="chooseStatus" column="CHOOSE_STATUS"/>
		<result property="chooseDate" column="CHOOSE_DATE"/>
		<association property="refund" column="REFUND_STATUS"
					 javaType="Refund" resultMap="refundResultSet"/>
	</resultMap>
	
	<!-- 마이페이지 나의 설계 목록 -->
	<resultMap type="MyPlan" id="myPlanListResultSet">
		<id property="planId" column="PLAN_ID"/>
		<result property="reqId" column="REQUEST_ID"/>
		<result property="planTitle" column="PLAN_TITLE"/>
		<result property="endDate" column="END_DATE"/>
		<result property="reqName" column="USER_NAME"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="reqPrice" column="REQUEST_PRICE"/>
		<result property="chooseStatus" column="CHOOSE_STATUS"/>
	</resultMap>
	
	<!-- 채택 환불 승인 거절 -->
	<resultMap type="Refund" id="refundResultSet">
		<id property="refundId" column="REFUND_ID"/>	
		<result property="refundReason" column="REFUND_REASON"/>
		<result property="applyDate" column="APPLY_DATE"/>
		<result property="processedDate" column="PROCESSED_DATE"/>
		<result property="refundStatus" column="REFUND_STATUS"/>
		<result property="pointId" column="POINT_ID"/>
	</resultMap>
	
	<!-- 의뢰하기 -->
	<insert id="insertRequest" parameterType="TravelRequest">
		INSERT INTO TRV_REQUEST
		VALUES(TRV_REQUEST_SEQ.NEXTVAL, #{requestTitle}, #{requestContent},
			   #{endDate}, #{requestPrice}, #{memberId}, 'N', NULL, #{trvCost})
	</insert>
	
	<!-- 의뢰글 목록 수 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM TRV_REQUEST
		WHERE CHOOSE_STATUS = 'N'
	</select>
	
	<!-- 의뢰글 조회 -->
	<select id="selectRequestList" resultMap="requestResultSet">
		SELECT TR.REQUEST_ID, TR.REQUEST_TITLE, M.USER_NAME, TR.REQUEST_PRICE, TR.TRV_COST, TR.END_DATE
		FROM TRV_REQUEST TR
		JOIN MEMBER M ON (TR.MEMBER_ID = M.MEMBER_ID)
		WHERE TR.CHOOSE_STATUS = 'N'
		ORDER BY TR.REQUEST_ID DESC
	</select>
	
	<!-- 의뢰글 상세보기 -->
	<select id="selectOneRequest" parameterType="_int" resultMap="requestDetailResultSet">
	   <!-- SELECT SUB.REQUEST_ID, SUB.REQUEST_TITLE, SUB.REQUEST_CONTENT,
             SUB.USER_NAME, SUB.MEMBER_ID, SUB.REQUEST_PRICE, SUB.TRV_COST, SUB.END_DATE,
             SUB.PLAN_ID, SUB.PLAN_TITLE, SUB.PLAN_CONTENT, SUB.ENROLL_DATE, M.USER_NAME
       FROM (SELECT M.USER_NAME, TR.REQUEST_ID, TR.REQUEST_TITLE, TR.REQUEST_CONTENT, 
             TR.MEMBER_ID, TR.REQUEST_PRICE, TR.TRV_COST, TR.END_DATE,
             TP.PLAN_ID, TP.PLAN_TITLE, TP.PLAN_CONTENT, TP.ENROLL_DATE
             FROM MEMBER M
             RIGHT JOIN TRV_PLAN TP ON (TP.MEMBER_ID= M.MEMBER_ID)
             RIGHT JOIN PARTICIPATION P ON (TP.PLAN_ID = P.PLAN_ID)
             RIGHT JOIN TRV_REQUEST TR ON (TR.REQUEST_ID = P.REQUEST_ID)) SUB
       LEFT JOIN MEMBER M ON (SUB.MEMBER_ID = M.MEMBER_ID)
	   WHERE SUB.REQUEST_ID  = #{requestId} -->
	   SELECT SUB.REQUEST_ID, SUB.REQUEST_TITLE, SUB.REQUEST_CONTENT,
             SUB.USER_NAME, SUB.MEMBER_ID, SUB.REQUEST_PRICE, SUB.TRV_COST, SUB.END_DATE,
             SUB.PLAN_ID, SUB.PLAN_TITLE, SUB.PLAN_CONTENT, SUB.ENROLL_DATE, M.USER_NAME,
             SUB.PTCP_ID, SUB.CHOOSE_STATUS
       FROM (SELECT M.USER_NAME, TR.REQUEST_ID, TR.REQUEST_TITLE, TR.REQUEST_CONTENT, 
             TR.MEMBER_ID, TR.REQUEST_PRICE, TR.TRV_COST, TR.END_DATE,
             TP.PLAN_ID, TP.PLAN_TITLE, TP.PLAN_CONTENT, TP.ENROLL_DATE,
             P.PTCP_ID, P.CHOOSE_STATUS
             FROM MEMBER M
             RIGHT JOIN TRV_PLAN TP ON (TP.MEMBER_ID= M.MEMBER_ID)
             RIGHT JOIN PARTICIPATION P ON (TP.PLAN_ID = P.PLAN_ID)
             RIGHT JOIN TRV_REQUEST TR ON (TR.REQUEST_ID = P.REQUEST_ID)) SUB
       LEFT JOIN MEMBER M ON (SUB.MEMBER_ID = M.MEMBER_ID)
	   WHERE SUB.REQUEST_ID  = #{requestId}
	</select>
	
	<!-- 설계글 인서트 -->
	<insert id="insertRequestPlan" parameterType="TravelRequestPlan">
		INSERT INTO TRV_PLAN
		VALUES (TRV_PLAN_SEQ.NEXTVAL, #{planTitle}, #{memberId}, 
				NULL, NULL, #{planContent}, NULL, SYSDATE, #{roomCharge}, #{trafficCharge}, #{etcCharge})
	</insert>
	
	<!-- 설계글 일자 인서트 -->
	<insert id="insertRequestDay" parameterType="PlanDay">
		<selectKey keyProperty="planId" resultType="_int" order="BEFORE">
			SELECT TRV_PLAN_SEQ.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO PLAN_DAY
		VALUES (PLAN_DAY_SEQ.NEXTVAL, #{pDay}, #{pDayMemo}, #{openStatus}, #{planId})
	</insert>
	
	<!-- 설계글 각 장소 인서트 -->
	<insert id="insertRequestPlace" parameterType="PlanPlace">
		<selectKey keyProperty="PdayId" resultType="_int" order="BEFORE">
			SELECT PLAN_DAY_SEQ.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO PLAN_PLACE
		VALUES (PLAN_PLACE_SEQ.NEXTVAL, #{PplaceTitle}, #{PplaceAddress}, #{PplaceLat}, #{PplaceLng}, #{PdayId}, 1)
	</insert>
	
	<!-- 설계글 의뢰참여 인서트 -->
	<insert id="insertParticipation" parameterType="Participation">
		<selectKey keyProperty="planId" resultType="_int" order="BEFORE">
			SELECT TRV_PLAN_SEQ.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO PARTICIPATION
		VALUES (PARTICIPATION_SEQ.NEXTVAL, 'N', SYSDATE, NULL, #{requestId}, #{planId})
	</insert>
	
	<!-- 설계글 불러오기 목록 조회 -->
	<select id="selectRequestPlanList" parameterType="TravelRequestPlan" resultMap="planListResultSet">
		SELECT *
		FROM TRV_PLAN TP
		LEFT JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		WHERE TP.MEMBER_ID = #{memberId}
		AND P.PTCP_ID IS NULL
	</select>
	
	<!-- 선택한 설계글 불러오기 -->
	<select id="selectLoadRequestPlan" parameterType="_int" resultMap="loadPlanResultSet">
		SELECT P.PTCP_ID, TP.PLAN_TITLE, TP.PLAN_CONTENT, TP.ROOM_CHARGE,
        TP.TRAFFIC_CHARGE, TP.ETC_CHARGE,
        PD.PDAY_ID, PD.PDAY, PD.PDAY_MEMO, PD.OPEN_STATUS,
        PP.PPLACE_ID, PP.PPLACE_TITLE, PP.PPLACE_ADDRESS,
        PP.PPLACE_LAT, PP.PPLACE_LNG
		FROM TRV_PLAN TP
		JOIN PLAN_DAY PD ON(TP.PLAN_ID = PD.PLAN_ID)
		LEFT JOIN PLAN_PLACE PP ON(PD.PDAY_ID = PP.PDAY_ID)
        LEFT JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		WHERE TP.PLAN_ID = #{planId}
		ORDER BY PD.PDAY_ID
	</select>
	
	<!-- 의뢰자(선택한 설계글 불러오기) -->
	<select id="selectOneRequestPlan" parameterType="_int" resultMap="loadPlanResultSet">
		SELECT TP.PLAN_ID, TP.PLAN_TITLE, TP.MEMBER_ID, TP.PLAN_CONTENT, TP.ENROLL_DATE, TP.ROOM_CHARGE, TP.TRAFFIC_CHARGE, TP.ETC_CHARGE,
		P.PTCP_ID, P.CHOOSE_STATUS, P.PTCP_DATE, P.REQUEST_ID, TR.REQUEST_TITLE, TR.REQUEST_CONTENT, TR.END_DATE, TR.REQUEST_PRICE, TR.TRV_COST,
		PD.PDAY_ID, PD.PDAY, PD.PDAY_MEMO, PD.OPEN_STATUS, PP.PPLACE_ID, PP.PPLACE_TITLE, PP.PPLACE_ADDRESS, PP.PPLACE_LAT, PP.PPLACE_LNG
		FROM TRV_PLAN TP
		JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		JOIN TRV_REQUEST TR ON(TR.REQUEST_ID = P.REQUEST_ID)
		JOIN PLAN_DAY PD ON(TP.PLAN_ID = PD.PLAN_ID)
		LEFT JOIN PLAN_PLACE PP ON(PD.PDAY_ID = PP.PDAY_ID)
		WHERE P.PTCP_ID = #{ptcpId}
		AND PD.OPEN_STATUS = 'Y'
		ORDER BY PD.PDAY_ID
	</select>
	
	<!-- 설계글 오픈상태 업데이트 -->
	<update id="updatePlanOpenStatus" parameterType="_int">
		UPDATE PLAN_DAY
		SET OPEN_STATUS = 'Y'
		WHERE PLAN_ID = #{planId}
	</update>
	
	<!-- 의뢰참여 채택상태 업데이트 -->
	<update id="updateParticipation" parameterType="_int">
		UPDATE PARTICIPATION
		SET CHOOSE_STATUS = 'Y',
		CHOOSE_DATE = SYSDATE
		WHERE PLAN_ID = #{planId}
	</update>
	
	<!-- 의뢰글 채택상태 업데이트 -->
	<update id="updateRequest" parameterType="_int">
		UPDATE TRV_REQUEST
		SET CHOOSE_STATUS = 'Y',
		CHOOSE_DATE = SYSDATE
		WHERE REQUEST_ID = #{code}
	</update>
	
	
	<!-- 채택후 나의 의뢰 목록 조회 -->
	<select id="selectMyRequestList" resultMap="myRequestResultSet">
		SELECT TR.REQUEST_ID, TR.REQUEST_TITLE, M.USER_NAME, TR.REQUEST_PRICE, TR.TRV_COST, TR.END_DATE, TR.CHOOSE_STATUS, TR.CHOOSE_DATE
		FROM TRV_REQUEST TR
		JOIN MEMBER M ON (TR.MEMBER_ID = M.MEMBER_ID)
		WHERE M.MEMBER_ID = #{memberId}
		ORDER BY TR.CHOOSE_STATUS DESC
	</select>
	
	<!-- 채택 후 나의의뢰 목록 수 -->
	<select id="selectRequestCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TRV_REQUEST TR
		JOIN MEMBER M ON(TR.MEMBER_ID = M.MEMBER_ID)
		WHERE M.MEMBER_ID = #{memberId}
	</select>
	
	<!-- 마이페이지 나의 설계글 수 -->
	<select id="selectPlanCount" resultType="_int">
		SELECT COUNT(*)
		FROM TRV_PLAN TR
		JOIN MEMBER M ON(TR.MEMBER_ID = M.MEMBER_ID)
		WHERE M.MEMBER_ID = #{memberId}
	</select>
	
	<select id="selectMyPlanList" resultMap="myPlanListResultSet">
		SELECT SUB.REQUEST_ID, SUB.USER_NAME, SUB.PLAN_ID, SUB.PLAN_TITLE, SUB.END_DATE, M.MEMBER_ID,
		SUB.REQUEST_PRICE, SUB.CHOOSE_STATUS
		FROM (SELECT TR.REQUEST_ID, TP.PLAN_ID, TP.PLAN_TITLE, TR.END_DATE, M.USER_NAME, TP.MEMBER_ID,
		TR.REQUEST_PRICE, P.CHOOSE_STATUS
		FROM TRV_PLAN TP
		LEFT JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		JOIN TRV_REQUEST TR ON(P.REQUEST_ID = TR.REQUEST_ID)
		JOIN MEMBER M ON (TR.MEMBER_ID = M.MEMBER_ID)) SUB
		JOIN MEMBER M ON(SUB.MEMBER_ID = M.MEMBER_ID)
		WHERE SUB.MEMBER_ID = #{memerId}
		ORDER BY SUB.CHOOSE_STATUS, SUB.PLAN_ID DESC
	</select>
	
	<!-- 마이페이지 미리작성 글 수 -->
	<select id="selectBeforePlanCount" resultType="_int">
		SELECT COUNT(*)
		FROM TRV_PLAN TP
		JOIN MEMBER M ON(TP.MEMBER_ID = M.MEMBER_ID)
		LEFT JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		WHERE M.MEMBER_ID = #{memberId}
		AND P.PTCP_ID IS NULL
	</select>
	
	<!-- 마이페이지 미리작성 글 목록 -->
	<select id="selectBeforePlanList" parameterType="_int" resultMap="planListResultSet">
		SELECT TP.PLAN_ID, TP.PLAN_TITLE, TP.ENROLL_DATE, TP.MODIFY_DATE
		FROM TRV_PLAN TP
		JOIN MEMBER M ON(TP.MEMBER_ID = M.MEMBER_ID)
		LEFT JOIN PARTICIPATION P ON(TP.PLAN_ID = P.PLAN_ID)
		WHERE M.MEMBER_ID = #{memberId}
		AND P.PTCP_ID IS NULL
	</select>
	
	<!-- 미리작성 설계글 업데이트(1단계) -->
	<update id="updateBeforePlan" parameterType="TravelRequestPlan">
		UPDATE TRV_PLAN
		SET PLAN_TITLE = #{planTitle},
		PLAN_CONTENT = #{planContent},
		MODIFY_DATE = SYSDATE,
		ROOM_CHARGE = #{roomCharge},
		TRAFFIC_CHARGE = #{trafficCharge},
		ETC_CHARGE = #{etcCharge}
		WHERE PLAN_ID = #{planId}
	</update>
	
	<!-- 미리작성 일자 업데이트(2단계) -->
	<update id="updateBeforeDay">
		UPDATE PLAN_DAY
		SET PDAY_MEMO = #{pDayMemo},
		OPEN_STATUS = #{openStatus}
		WHERE PDAY_ID = (SELECT PDAY_ID
						 FROM (SELECT ROWNUM RNUM, PDAY_ID, PLAN_ID 
						       FROM(SELECT PD.PDAY_ID, TP.PLAN_ID
						       FROM PLAN_DAY PD
						       JOIN TRV_PLAN TP ON(PD.PLAN_ID = TP.PLAN_ID)
						       WHERE TP.PLAN_ID = #{planId}))
						 WHERE RNUM = #{count})
	</update>
	
	<!-- 미리작성 각 장소 업데이트(3단계) -->
	<update id="updateBeforePlace" parameterType="PlanPlace">
		UPDATE PLAN_PLACE
		SET PPLACE_TITLE = #{PplaceTitle},
		PPLACE_ADDRESS = #{PplaceAddress},
		PPLACE_LAT = #{PplaceLat},
		PPLACE_LNG = #{PplaceLng}
		WHERE PPLACE_ID = (SELECT PPLACE_ID
						 FROM (SELECT ROWNUM RNUM, PDAY_ID, PLAN_ID, PPLACE_ID
						        FROM(SELECT PD.PDAY_ID, PD.PLAN_ID, PP.PPLACE_ID
						        FROM PLAN_PLACE PP
						        JOIN PLAN_DAY PD ON(PP.PDAY_ID = PD.PDAY_ID)
						        WHERE PD.PLAN_ID = #{PdayId}
						        ORDER BY PPLACE_ID))
						 WHERE RNUM = #{count})
	</update>
</mapper>